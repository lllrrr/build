#!/bin/sh /etc/rc.common
START=52
STOP=10

# Copyright (C) 2019 Jianpeng Xiang (1505020109@mail.hnust.edu.cn)
# This is free software, licensed under the GNU General Public License v3.

# 导入函数库
. /usr/bin/softwarecenter/website_manager.sh
. /usr/bin/softwarecenter/mysql_install.sh
. /usr/bin/softwarecenter/nginx_install.sh
website_config_list=""

#本函数负责清理未写入配置的网站
clean_vhost_config(){
	local_config_list="`ls /opt/etc/nginx/vhost | cut -d. -f1`"
	local_no_use_config_list="`ls /opt/etc/nginx/no_use | cut -d. -f1`"
	delete_config_list=""

	# 获取要删除的网站
	for i in $local_config_list; do
		flag=""
		for j in $website_config_list; do
			if [ "$i" == "$j" ]; then
				flag="1"
				break
			fi
		done
		if [ -z $flag ]; then
			delete_config_list="$delete_config_list /opt/etc/nginx/vhost/$i.conf"
		fi
	done
	for i in $local_no_use_config_list; do
		flag=""
		for j in $website_config_list; do
			if [ "$i" == "$j" ]; then
				flag="1"
				break
			fi
		done
		if [ -z $flag ]; then
			delete_config_list="$delete_config_list /opt/etc/nginx/no_use/$i.conf"
		fi
	done

	for conf in $delete_config_list; do
		webdir=`vhost_config_list $conf | awk '{print $1}'`
		delete_website $conf $webdir
	done
}

# 网站迭代处理，本函数迭代的配置网站（处理逻辑也许可以更好的优化？）
handle_website(){
	local website_enabled autodeploy_enable customdeploy_enabled redis_enabled website_dir website_select port

	config_get_bool website_enabled			$1	website_enabled
	config_get_bool autodeploy_enable		$1	autodeploy_enable
	config_get_bool customdeploy_enabled	$1	customdeploy_enabled
	config_get_bool redis_enabled			$1	redis_enabled

	config_get website_select	$1	website_select
	config_get website_dir		$1	website_dir
	config_get port				$1	port

	if [ -z "$entware_enable" ]; then
		echo_time "softwarecenter 没有启动"
		exit 0
	fi

	# echo "获取网站配置文件名"
	if [ "$autodeploy_enable" ]; then
		# 获取网站名称
		website_name=`website_name_mapping $website_select`
	elif [ "$customdeploy_enabled" ]; then
		website_name="`echo $website_dir | awk -F"[/]" '{print $NF}'`"
	else
		return
	fi

	if [ "$website_enabled" ]; then
		if [ -f /opt/etc/nginx/no_use/$website_name.conf ]; then
			echo_time "启用 $website_name"
			mv /opt/etc/nginx/no_use/$website_name.conf /opt/etc/nginx/vhost/$website_name.conf
			port_custom /opt/etc/nginx/vhost/$website_name.conf
			/opt/etc/init.d/S80nginx reload > /dev/null 2>&1
		elif [ ! -f /opt/etc/nginx/vhost/$website_name.conf ]; then
			if [ "$autodeploy_enable" ]; then
				install_website $website_select $port && echo_time "$name 安装完成"
				/opt/etc/init.d/S80nginx reload > /dev/null 2>&1
			elif [ "$customdeploy_enabled" ]; then
				install_custom $website_dir $port #检查自定义网站是否正常工作？
			fi
		fi
		if [ "$autodeploy_enable" ]; then
			if [ "$redis_enabled" ]; then
				if [ -d /opt/wwwroot/$website_name ]; then
					if [ ! -f /opt/wwwroot/$website_name/redis_enabled ]; then
						if [ "$website_name" = "Nextcloud" ] || [ "$website_name" = "Owncloud" ]; then
							/bin/touch /opt/wwwroot/$website_name/redis_enabled
							redis /opt/wwwroot/$website_name
						fi
					fi
				fi
			else
				rm -rf /opt/wwwroot/$website_name/config/config.php
				rm -rf /opt/wwwroot/$website_name/redis_enabled
			fi
			Port_modification /opt/etc/nginx/vhost/$website_name.conf

		fi
	else
		echo_time "网站 $website_name 已关闭"
		if [ -f /opt/etc/nginx/vhost/$website_name.conf ]; then
			mv /opt/etc/nginx/vhost/$website_name.conf /opt/etc/nginx/no_use/$website_name.conf
			/opt/etc/init.d/S80nginx reload > /dev/null 2>&1
		fi
	fi

	website_config_list="$website_config_list $website_name"
}

start(){

cdg(){
	local deploy_entware entware_enable deploy_nginx deploy_mysql nginx_enabled mysql_enabled \
	Partition_disk disk_mount cpu_model user pass swap_enabled swap_size swap_path

	config_load softwarecenter

	config_get_bool deploy_entware	main deploy_entware
	config_get_bool entware_enable	main entware_enable
	config_get_bool deploy_nginx	main deploy_nginx
	config_get_bool deploy_mysql	main deploy_mysql
	config_get_bool	nginx_enabled	main nginx_enabled
	config_get_bool mysql_enabled	main mysql_enabled
	config_get_bool swap_enabled	main swap_enabled

	config_get Partition_disk	main Partition_disk
	config_get disk_mount		main disk_mount
	config_get cpu_model		main cpu_model
	config_get swap_size		main swap_size
	config_get swap_path		main swap_path
	config_get user				main user
	config_get pass				main pass
	# entware环境
	source /etc/profile > /dev/null 2>&1
	if [ $entware_enable ]; then
		if [ ! -e /etc/init.d/entware ]; then
			echo_time "开始部署entware环境\n" && entware_set $disk_mount $cpu_model
			source /etc/profile > /dev/null 2>&1
		fi
	else
		if [ -x /etc/init.d/entware ]; then
			echo_time "entware环境已删除\n" && entware_unset
		fi
		return
	fi

	# Nginx
	if [ $deploy_nginx ]; then
		[ ! -x /opt/etc/init.d/S80nginx ] && echo_time "开始安装Nginx" && init_nginx
		if [ $nginx_enabled ]; then
			[ "`pgrep nginx`" ] || nginx_manage start > /dev/null 2>&1
			config_foreach handle_website website test
			clean_vhost_config
		else
			nginx_manage stop > /dev/null 2>&1
		fi
	else
		[ -x /opt/etc/init.d/S80nginx ] && echo_time "卸载Nginx相关的软件包" && del_nginx
	fi

	# MySQL
	if [ $deploy_mysql ]; then
		[ ! -x /opt/etc/init.d/S70mysqld ] && echo_time "开始安装MySQL" && init_mysql
		if [ $mysql_enabled ]; then
			[ "`pgrep mysqld`" ] || /opt/etc/init.d/S70mysqld start > /dev/null 2>&1
		else
			/opt/etc/init.d/S70mysqld stop > /dev/null 2>&1
		fi
	else
		[ -x /opt/etc/init.d/S70mysqld ] && echo_time "卸载MySQL相关的软件包" && del_mysql
	fi

	[ $swap_enabled ] && config_swap_init $swap_size $swap_path || config_swap_del $swap_path

_start(){
	if [ -z "`pidof $f`" ]; then
		/opt/etc/init.d/$p start 1> /dev/null
		sleep 5
		if [ "`pidof $f`" ]; then
			echo_time "$f 启动成功"
		else
			echo_time "$f 启动失败"
			[ "`which $f`" ] && echo_time "$f 没有开启" || echo_time "$f 没有安装"
		fi
	# else
		# echo_time "$f  运行中"
	fi
}

	for p in `ls /opt/etc/init.d`; do
	[ $p = S81aria2 ] && f=aria2c && _start
	[ $p = S57amuled ] && f=amuled && _start
	[ $p = S80deluged ] && f=deluged && _start
	[ $p = S80lighttpd ] && f=lighttpd && _start
	[ $p = S85rtorrent ] && f=rtorrent && _start
	[ $p = S81deluge-web ] && f=deluge-web && _start
	[ $p = S89qbittorrent ] && f=qbittorrent-nox && _start
	[ $p = S88transmission ] && f=transmission-daemon && _start
	# [ $p = S80nginx ] && f=nginx && _start
	# [ $p = S70mysqld ] && f=mysqld && _start
	# [ $p = S79php7-fpm ] && f=php-fpm && _start
	done
}

cdg >> /tmp/log/softwarecenter.log
}

stop(){
	:
}

restart(){
	stop;start
}
