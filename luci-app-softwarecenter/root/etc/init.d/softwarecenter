#!/bin/sh /etc/rc.common
START=52
STOP=10

#
# Copyright (C) 2019 Jianpeng Xiang (1505020109@mail.hnust.edu.cn)
#
# This is free software, licensed under the GNU General Public License v3.
#


# 导入函数库
. /usr/bin/softwarecenter/website_manager.sh
. /usr/bin/softwarecenter/mysql_install.sh
. /usr/bin/softwarecenter/nginx_install.sh

website_config_list=""

####### 网站清理 ########
##本函数负责清理未写入配置的网站
clean_vhost_config(){
	local_config_list="`ls /opt/etc/nginx/vhost | sed "s/.conf//g"`"
	local_no_use_config_list="`ls /opt/etc/nginx/no_use | sed "s/.conf//g"`"
	delete_config_list=""

	# 获取要删除的网站
	for i in $local_config_list; do
		flag=""
		for j in $website_config_list; do
			if [ "$i" == "$j" ]; then
				flag="1"
				break
			fi
		done
		if [ -z $flag ]; then
			delete_config_list="$delete_config_list /opt/etc/nginx/vhost/$i.conf"
		fi
	done
	for i in $local_no_use_config_list; do
		flag=""
		for j in $website_config_list; do
			if [ "$i" == "$j" ]; then
				flag="1"
				break
			fi
		done
		if [ -z $flag ]; then
			delete_config_list="$delete_config_list /opt/etc/nginx/no_use/$i.conf"
		fi
	done

	for conf in $delete_config_list; do
		webdir=`vhost_config_list $conf | awk '{print $1}'`
		delete_website $conf $webdir
	done
}

onmp_restart()
{
	/opt/etc/init.d/S70mysqld stop > /dev/null 2>&1
	/opt/etc/init.d/S79php7-fpm stop > /dev/null 2>&1
	/opt/etc/init.d/S80nginx stop > /dev/null 2>&1
	killall -9 nginx mysqld php-fpm > /dev/null 2>&1
	sleep 3
	/opt/etc/init.d/S70mysqld start > /dev/null 2>&1
	/opt/etc/init.d/S79php7-fpm start > /dev/null 2>&1
	/opt/etc/init.d/S80nginx start > /dev/null 2>&1
	sleep 3
	num=0
	for PROC in 'nginx' 'php-fpm' 'mysqld'; do
		if [ -n "`pidof $PROC`" ]; then
			echo $PROC "启动成功";
		else
			echo $PROC "启动失败";
			num=`expr $num + 1`
		fi
	done

	if [[ $num -gt 0 ]]; then
		echo "onmp启动失败"
		logger -t "【ONMP】" "启动失败"
	else
		echo "onmp已启动"
		logger -t "【ONMP】" "已启动"
		vhost_list
	fi
}

####### 网站迭代处理 ########
##本函数迭代的配置网站（处理逻辑也许可以更好的优化？）
handle_website(){
	local website_enabled autodeploy_enable website_select port customdeploy_enabled website_dir

	config_get_bool website_enabled $1 website_enabled
	config_get_bool autodeploy_enable $1 autodeploy_enable
	config_get_bool customdeploy_enabled $1 customdeploy_enabled
	config_get_bool redis_enabled $1 redis_enabled

	config_get website_select $1 website_select
	config_get website_dir $1 website_dir
	config_get port $1 port

	if [ "$entware_enable" != "1" ]; then
		echo "softwarecenter 没有启动"
		exit 0
	fi

	# echo "获取网站配置文件名"
	if [ -n "$autodeploy_enable" ]; then
		#install_website $website_select $port
		website_name=`website_name_mapping $website_select`
	elif [ -n "$customdeploy_enabled" ]; then
		website_name="`echo $website_dir | awk -F"[/]" '{print $NF}'`"
	else
		return
	fi

	if [ -z "$website_enabled" ]; then
		echo "$website_name 网站未启用"
		if [ -f /opt/etc/nginx/vhost/$website_name.conf ]; then
			mv /opt/etc/nginx/vhost/$website_name.conf /opt/etc/nginx/no_use/$website_name.conf
		fi
	else
		if [ -f /opt/etc/nginx/no_use/$website_name.conf ]; then
			echo "$website_name已安装但被禁用"
			mv /opt/etc/nginx/no_use/$website_name.conf /opt/etc/nginx/vhost/$website_name.conf
		elif [ ! -f /opt/etc/nginx/vhost/$website_name.conf ]; then
			if [ -n "$autodeploy_enable" ]; then
				install_website $website_select $port
			elif [ -n "$customdeploy_enabled" ]; then
				##TODO check custom website is work normally?
				install_custom $website_dir $port
			fi
		fi
		if [[ -n "$autodeploy_enable" ]]; then
			if [[ -n "$redis_enabled" ]]; then
				if [[ -d /opt/wwwroot/$website_name ]]; then
					if [[ ! -f /opt/wwwroot/$website_name/redis_enabled ]]; then
						if [[ "$website_name" == "Nextcloud" ]] || [[ "$website_name" == "Owncloud" ]]; then
							/bin/touch /opt/wwwroot/$website_name/redis_enabled
							redis /opt/wwwroot/$website_name
						fi
					fi
				fi
			else
				rm -rf /opt/wwwroot/$website_name/config/config.php
				rm -rf /opt/wwwroot/$website_name/redis_enabled
			fi
		fi
	fi

	website_config_list="$website_config_list $website_name"
}

start(){

cdg(){
	local deploy_entware entware_enable deploy_nginx deploy_mysql nginx_enabled mysql_enabled \
	disk_mount cpu_model user pass swap_enabled swap_size swap_path

	config_load softwarecenter

	config_get_bool deploy_entware 	main deploy_entware
	config_get_bool entware_enable	main entware_enable
	config_get_bool deploy_nginx	main deploy_nginx
	config_get_bool deploy_mysql	main deploy_mysql
	config_get_bool	nginx_enabled	main nginx_enabled
	config_get_bool mysql_enabled	main mysql_enabled
	config_get_bool swap_enabled	main swap_enabled

	config_get disk_mount	main disk_mount
	config_get cpu_model	main cpu_model
	config_get swap_size	main swap_size
	config_get swap_path	main swap_path
	config_get user			main user
	config_get pass			main pass
	### entware ###
	if [ -z "$deploy_entware" ]; then
		if [ -x /etc/init.d/entware ]; then
			echo "entware环境初始化" && entware_unset
		fi
		return
	fi

	if [ ! -x /etc/init.d/entware ]; then
		entware_set $disk_mount $cpu_model
		source /etc/profile
	fi

	if [ -z "$entware_enable" ]; then
		return
	fi

	### Nginx ###
	if [ -n "$deploy_nginx" ];then
		if [ ! -x /opt/etc/init.d/S80nginx ]; then
			echo "开始安装Nginx" && init_nginx
		fi
		if [ -z "$nginx_enabled" ]; then
			nginx_manage stop && echo "关闭Nginx服务器"
		else
			if [ -z "`pgrep nginx`" ]; then
				nginx_manage start && echo "Nginx服务器已运行"
			fi
			# 迭代配置website
			config_foreach handle_website website test
			clean_vhost_config
			/opt/etc/init.d/S80nginx reload > /dev/null 2>&1
		fi
	else
		if [ -x /opt/etc/init.d/S80nginx ]; then
			del_nginx && echo "已卸载Nginx相关的软件包"
		fi
	fi

	### MySQL ###
	if [ -n "$deploy_mysql" ]; then
		# echo "检查MySQL部署情况"
		if [ ! -x /opt/etc/init.d/S70mysqld ]; then
			echo "开始安装MySQL" && init_mysql
		fi
		if [ -z $mysql_enabled ]; then
			/opt/etc/init.d/S70mysqld stop && echo "关闭MySQL服务器"
		else
			if [ -z "`pgrep mysqld`" ]; then
				/opt/etc/init.d/S70mysqld start && echo "MySQL数据库已运行"
			fi
		fi
	else
		if [ -x /opt/etc/init.d/S70mysqld ]; then
			del_mysql && echo "已卸载MySQL相关的软件包"
		fi
	fi
	[ $swap_enabled = 1 ] && config_swap_init $swap_size $swap_path || config_swap_del $swap_path

	for PROC in mysqld nginx php-fpm; do
		if [ -n "`pidof $PROC`" ]; then
			echo "$PROC 启动成功";
		else
			echo "$PROC 启动失败";
		fi
	done
	# onmp_restart
}

cdg | tee -a /tmp/log/softwarecenter.log
}

stop(){
	:
}

restart(){
	stop;start
}
